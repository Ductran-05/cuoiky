//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace doanwpf.MODEL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class file_databaseEntities : DbContext
    {
        public file_databaseEntities()
            : base("name=file_databaseEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            try
            {
                // Thiết lập Cascade Delete cho NHANVIEN và DONHANG
                modelBuilder.Entity<DONHANG>()
                    .HasRequired(dh => dh.NHANVIEN)
                    .WithMany(nv => nv.DONHANGs)
                    .HasForeignKey(dh => dh.MaNV)
                    .WillCascadeOnDelete(true); // Kích hoạt Cascade Delete

                // Thiết lập Cascade Delete cho NHANVIEN và NHAPHANG
                modelBuilder.Entity<NHAPHANG>()
                    .HasRequired(nh => nh.NHANVIEN)
                    .WithMany(nv => nv.NHAPHANGs)
                    .HasForeignKey(nh => nh.MaNV)
                    .WillCascadeOnDelete(true); // Kích hoạt Cascade Delete

                // Thiết lập Cascade Delete cho DONHANG và CTHOADON
                modelBuilder.Entity<CTHOADON>()
                    .HasRequired(ct => ct.DONHANG)
                    .WithMany(dh => dh.CTHOADONs)
                    .HasForeignKey(ct => ct.MaHD)
                    .WillCascadeOnDelete(true);

                // Thiết lập Cascade Delete cho NHAPHANG và CTNHAP
                modelBuilder.Entity<CTNHAP>()
                    .HasRequired(ct => ct.NHAPHANG)
                    .WithMany(nh => nh.CTNHAPs)
                    .HasForeignKey(ct => ct.MaHD)
                    .WillCascadeOnDelete(true);

            }
            catch (Exception ex)
            {
                // Log lỗi hoặc xử lý exception ở đây
                Console.WriteLine("Có lỗi xảy ra: " + ex.Message);
            }
        }



        public virtual DbSet<CHATLIEU> CHATLIEUx { get; set; }
        public virtual DbSet<CTHOADON> CTHOADONs { get; set; }
        public virtual DbSet<CTNHAP> CTNHAPs { get; set; }
        public virtual DbSet<DONHANG> DONHANGs { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<LOAISANPHAM> LOAISANPHAMs { get; set; }
        public virtual DbSet<NHACUNGCAP> NHACUNGCAPs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<NHAPHANG> NHAPHANGs { get; set; }
        public virtual DbSet<SANPHAM> SANPHAMs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<THONGTINTAIKHOAN> THONGTINTAIKHOANs { get; set; }
    }
}
